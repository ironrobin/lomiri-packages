From eb228d6491a59417c8bfbd0c421caeda90e1bbb9 Mon Sep 17 00:00:00 2001
From: Alex R <alex@ironrobin.net>
Date: Sun, 5 Oct 2025 01:35:34 +0000
Subject: [PATCH] InputDispatchFilter: take Shell's rotation into account

---
 plugins/Cursor/InputDispatcherFilter.cpp | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/plugins/Cursor/InputDispatcherFilter.cpp b/plugins/Cursor/InputDispatcherFilter.cpp
index 3021c85f8..5a903a680 100644
--- a/plugins/Cursor/InputDispatcherFilter.cpp
+++ b/plugins/Cursor/InputDispatcherFilter.cpp
@@ -17,6 +17,7 @@
 #include "InputDispatcherFilter.h"
 #include "MousePointer.h"
 
+#include <QDebug>
 #include <QEvent>
 #include <QGuiApplication>
 #include <QQuickWindow>
@@ -66,20 +67,28 @@ bool InputDispatcherFilter::eventFilter(QObject *o, QEvent *e)
             auto pointer = currentPointer();
             if (!pointer || !pointer->window()) return true;
 
+            if (!pointer->parentItem()) {
+                qDebug() << "Huh? a MousePointer without a parent?";
+                return true;
+            }
+
             QMouseEvent* me = static_cast<QMouseEvent*>(e);
 
             // Local position gives relative change of mouse pointer.
             QPointF movement = me->localPos();
 
-            QPointF oldPos;
+            // Because the movement is relative to the visual display, run both old and new
+            // pointer position through mapToGlobal() to take Shell's rotation into account,
+            // then recalculate the movement as a difference between them.
+            QPointF oldPos = pointer->parentItem()->mapToGlobal(pointer->position());
+            QPointF newPos = pointer->parentItem()->mapToGlobal(pointer->position() + movement);
+            movement = newPos - oldPos;
+
             // Adjust the position
             if (qEnvironmentVariableIsSet("LOMIRI_RUNNING_IN_VM")) {
                 // Get the position directly from Mir
                 oldPos = me->screenPos();
             }
-            else {
-                oldPos = pointer->window()->geometry().topLeft() + pointer->position();
-            }
-            QPointF newPos = adjustedPositionForMovement(oldPos, movement);
+            newPos = adjustedPositionForMovement(oldPos, movement);
 
             QScreen* currentScreen = screenAt(newPos);
-- 
2.51.0